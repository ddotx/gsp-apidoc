FORMAT: 1A
HOST: http://gsp.apiblueprint.org/

# gSP API Documentation (For approval)

gSP API is a API allowing any products move along the supply chain flows.

# Overview

## Platform (ref: orderbot)

+ **Order Management**
- Channels - To Segment Business
- Order Statuses - To Create Workflow
- Variables - To Determine & Automate Status
- Order Orchestration - Conduct Orders Across All Sales Channels 
+ **Product Management** 
- Commerce PIM - Multi-channel Definitions
- Robust Profile - Infinite Product Details & Fields 
- Tags - Create & Assign Unlimited # Of Attributes
- Sync - Single Product Pushed To Multiple Channels
+ **Sales Management** 
- Pre-integrated - For B2C
- Price Control - Unlimited Price Lists
- B2B - Full Cycle Wholesale Management
- Phone Orders - Fast, Simple Order Entry
+ **Inventory Management**
- Omni Channel - For B2C And B2B
- Accuracy - Logs Of All Count & Adjustments
- Traceability - Logs Of All Transactions
- Future Visibility - Inventory As A Function Of Time
- Transparency - Confidence Of Inventory Levels Through Allocations, Thresholds, & Data Logs
+ **Warehouse Management**
- Multi-warehouse - Ready Of Growth
- Batch Processes - Pick & Pack More, Faster
- Scanning - Eliminate Errors
- Ship Integrations - FedEx, UPS, USPS, DHL
+ **Customer Management**
- Contact Centre - Record & Segment Customers
- Customer Dashboard - Insight To Clients
- Notes - Record Issues, & Schedule Follow-ups
- Order History - Visibility On All Purchases
- Returns - Turn A Bad Situation Into An Opportunity

## All About Supply chain

Supply Chain is the channel for moving materials and goods and services from your supplier to your customer.
Logistics is the process of filling a customer's order.

# Group Order

## Order Detail [/order/{order_id}]
### List Orders [GET]
Returns a description of the requested orders. As well as general data about the order, such as its ID, its type and when it was created

+ Parameters
    + order_id (int)
+ Response 200 (application/json)

        [
            {
                "id": 100182,
                "parentOrderId": 100181,
                "orderTypeCode": "PO",
                "reference": "order#001",
                "version": 1,
                "state":
                    {
                    "tax": "ready"
                    }
                "acknowledged": 0,
                "orderStatus": 
                    {
                    "orderStatusId": 6,
                    "name": "Pending PO"
                    },
                "orderPaymentStatus": "PAID",
                "stockStatusCode": "NON",
                "allocationStatusCode": "ANR",
                "shippingStatusCode": "NST",
                "placedOn": "2011-06-29T11:12:24.000+01:00",
                "createdOn": "2011-06-29T11:12:24.000+01:00",
                "updatedOn": "2011-06-30T15:35:01.000+01:00",
                "closedOn": "2011-06-30T15:35:01.000+01:00",
                "createdById": 200,
                "priceListId": 1,
                "priceModeCode": "EXC",
                "delivery":
                    {
                    "deliveryDate": "2011-07-08T00:00:00.000+01:00",
                    "shippingMethodId": 1
                    }
            }
        ]

## Order Shipping Status [/order-shipping-status]
### View All Order [GET]
Order shipping status codes indicate the shipping status of a sale, credit or purchase.
+ Response 200 (application/json)

        [   
            {
                "id": 1,
                "code": "NST",
                "description": "No stock tracked products on order"
            },
            {
                "id": 2,
                "code": "SNS",
                "description": "Stock not shipped"
            },
            {
                "id": 3,
                "code": "SPS",
                "description": "Stock part shipped"
            },
            {
                "id": 4,
                "code": "ASS",
                "description": "All stock shipped"
            }
        ]

## Order Stock Status [/order-stock-status]
### View All Order [GET]
Order stock status codes indicate the fulfilment status of a sale, credit or purchase
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "code": "SON",
                "description": "Sales Order Not Fulfilled"
            },
            {
                "id": 2,
                "code": "SOP",
                "description": "Sales Order Part Fulfilled"
            },
            {
                "id": 3,
                "code": "SOA",
                "description": "Sales Order All Fulfilled"
            }
        ]

## Order
# Group Supplier
## All Supplier [/supplier/{limit}&{offset}&{sort}&{search}]

### List All Supplier [GET]
+ Parameters
    + limit (int, optional)
        + Default: 10
    + offset (int, required)
    + sort (enum[string], optional)
    + search (unicodestring, optional)

+ Response 200 (application/json)

        [
            {
                "title": "All Supplier",
                "updated_at": "2015-08-05T08:40:51.620Z",
                "Supplier": [
                    {
                        "id": 001,
                        "name": "supplier title A"
                    }, {
                        "id": 002,
                        "name": "supplier title B"
                    }, {
                        "id": 003,
                        "name": "supplier title C"
                    }, {
                        "id": 004,
                        "name": "supplier title D"
                    }
                ]
            }
        ]

### Create a New Supplier [POST]

The body of this request should be a JSON object containing the following parameters:

| Name | Type | Description |
|------|------|-------------|
| `company` | **unicodestring**, *required* |  |
| `name` | unicodestring |  |
| `street1` | unicodestring |  |
| `street2` | unicodestring |  |
| `city` | unicodestring |  |
| `state` | unicodestring |  |
| `zip` | unicodestring |  |
| `country` | unicodestring |  |
| `email` | **unicodestring**, *required* |  |
| `phone` | unicodestring |  |
| `fax` | unicodestring |  |
| `reference_number` | unicodestring |  |
| `cart_address_id` | unicodestring |  |

+ Response 200 (application/json)

## Supplier Detail [/supplier/{supplier_id}]
### View Supplier Detail [GET]
+ Parameters
    + supplier_id (int)

+ Response 200 (application/json)
### Update Supplier Detail [PUT]
| Name | Type | Description |
|------|------|-------------|
| `company` | unicodestring |  |
| `name` | unicodestring |  |
| `street1` | unicodestring |  |
| `street2` | unicodestring |  |
| `city` | unicodestring |  |
| `state` | unicodestring |  |
| `zip` | unicodestring |  |
| `country` | unicodestring |  |
| `email` | unicodestring |  |
| `phone` | unicodestring |  |
| `fax` | unicodestring |  |
| `reference_number` | unicodestring |  |
| `cart_address_id` | unicodestring |  |
| `validation` | [ValidationNugget](/#reference/model-validationnugget) |  |
| `validate` | stringbool |  |
+ Response 200 (application/json)

# Group Warehouse

## Goods-In Note Correction [/warehouse/good_in_correct]
This resource allows you to correct the quantity of stock received on a batch.
### POST [POST]
+ Response 200 (application/json)

## Goods-In Note [/warehouse/good_in]
A Goods-In Note is used to represent stock entering your stock control system for the first time. It is most often used when stock is delivered from a supplier to one of your Warehouses.
### GET [GET]
+ Response 200 (application/json)
### POST [POST]
+ Response 200 (application/json)
### DELETE [DELETE]
+ Response 200 (application/json)

## Goods-Out Note [/warehouse/good_out]
Goods-Out Notes are used to represent stock permanently leaving your stock control system. The most common use of a Goods-Out Note is to facilitate the fulfilment of a Sales Order.
### GET [GET]
+ Response 200 (application/json)
### POST [POST]
+ Response 200 (application/json)
### PUT [PUT]
+ Response 200 (application/json)
### DELETE [DELETE]
+ Response 200 (application/json)

## Goods-Out Note Event [/warehouse/good_out_event]
A goods-out note event represents an event in the lifecycle of a goods-out note such as picked, packed and shipped.
### POST [POST]
+ Response 200 (application/json)

## View All Warehouse [/warehouse/{limit}&{offset}&{sort}&{search}]

### View Warehouse [GET]
+ Parameters
    + limit (int, optional) - The maximum
        + Default: 10
    + offset (int, required)
    + sort (enum[string], optional)
        + Members
            + `name`
            + `-name`
    + search (unicodestring, optional)

+ Response 200 (application/json)
### Create [POST]
The body of this request should be a JSON object containing the following parameters:

| Name | Type | Description |
|------|------|-------------|
| `name` | **unicodestring**, *required* |  |
| `street1` | unicodestring |  |
| `street2` | unicodestring |  |
| `city` | unicodestring |  |
| `state` | unicodestring |  |
| `zip` | unicodestring |  |
| `country` | unicodestring |  |
| `email` | unicodestring |  |
| `phone` | unicodestring |  |
| `cart_id` | unicodestring |  |

+ Response 200 (application/json)

## Default Warehouse [/warehouse/{warehouse_id}/make_default/]
+Parameters
    + warehouse_id (string)

### Set Default [POST]
+ Response 200 (application/json)

# Group Products

## View Product [/product/{limit}&{offset}&{sort}&{search}&{status}&{cart}]
### List All Products [GET]
+ Parameters
    + limit (int, optional)
        + Default: 10
    + offset (int, required)
    + sort (enum[string], optional)
        + Members
            + `name`
            + `-name`
            + `sku`
            + `-sku`
            + `created`
            + `-created`
            + `default_supplier`
            + `-default_supplier`
    + search (unicodestring, optional)
    + status (enum[string], optional)
        + Members
            + `kit_parent`
            + `kit_component`
            + `low_inventory`
            + `always_dropship`
            + `never_dropship`
            + `needs_sync`
            + `to_be_shipped`
            + `oversold`
            + `archived`
            + `active`
            + `all`
    + cart (int, required)
+ Response 200 (application/json)
### Create New Product [POST]
The body of this request should be a JSON object containing the following parameters:

| Name | Type | Description |
|------|------|-------------|
| `sku` | **sku**, *required* |  |
| `name` | unicodestring |  |
| `category` | unicodestring |  |
| `price` | **number**, *required* |  |
| `weight` | **number**, *required* |  |
| `length` | int |  |
| `height` | int |  |
| `width` | int |  |
| `taxable` | unicodestring |  |
| `cost` | **number**, *required* |  |
| `type` | unicodestring |  |
| `upc` | unicodestring |  |
| `asin` | unicodestring |  |
| `on_hand` | **number**, *required* |  |
| `low_stock_threshold` | **number**, *required* |  |
| `out_of_stock_threshold` | **number**, *required* |  |
| `cart` | **int**, *required* |  |
| `sync` | stringbool |  |
| `original_sku` | unicodestring |  |
| `variant_sku` | unicodestring |  |
| `inventory_changed` | stringbool |  |
| `max_export_qty` | int |  |
| `images` | [NewProductImage](/#reference/model-newproductimage) |  |
| `amazon_extra_info` | [NewAmazonExtraInfo](/#reference/model-newamazonextrainfo) |  |
| `ebay_extra_info` | [NewEbayExtraInfo](/#reference/model-newebayextrainfo) |  |
| `channeladvisor_extra_info` | [NewChannelAdvisorExtraInfo](/#reference/model-newchanneladvisorextrainfo) |  |
| `jet_extra_info` | [NewJetExtraInfo](/#reference/model-newjetextrainfo) |  |
| `etsy_extra_info` | [NewEtsyExtraInfo](/#reference/model-newetsyextrainfo) |  |
| `walmart_extra_info` | [NewWalmartExtraInfo](/#reference/model-newwalmartextrainfo) |  |
| `audit_import` | [ProductAuditImport](/#reference/model-productauditimport) |  |
+ Response 200 (application/json)

# Group Money

## Currency

# Group User

## Concurrent User