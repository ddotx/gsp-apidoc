FORMAT: 1A
HOST: http://gsp.apiblueprint.org/

# gSP API Documentation (For approval)

gSP API is a API allowing any products move along the supply chain flows.

# Overview

## Platform (ref: orderbot)

+ **Order Management**
- Channels - To Segment Business
- Order Statuses - To Create Workflow
- Variables - To Determine & Automate Status
- Order Orchestration - Conduct Orders Across All Sales Channels 
+ **Product Management** 
- Commerce PIM - Multi-channel Definitions
- Robust Profile - Infinite Product Details & Fields 
- Tags - Create & Assign Unlimited # Of Attributes
- Sync - Single Product Pushed To Multiple Channels
+ **Sales Management** 
- Pre-integrated - For B2C
- Price Control - Unlimited Price Lists
- B2B - Full Cycle Wholesale Management
- Phone Orders - Fast, Simple Order Entry
+ **Inventory Management**
- Omni Channel - For B2C And B2B
- Accuracy - Logs Of All Count & Adjustments
- Traceability - Logs Of All Transactions
- Future Visibility - Inventory As A Function Of Time
- Transparency - Confidence Of Inventory Levels Through Allocations, Thresholds, & Data Logs
+ **Warehouse Management**
- Multi-warehouse - Ready Of Growth
- Batch Processes - Pick & Pack More, Faster
- Scanning - Eliminate Errors
- Ship Integrations - FedEx, UPS, USPS, DHL
+ **Customer Management**
- Contact Centre - Record & Segment Customers
- Customer Dashboard - Insight To Clients
- Notes - Record Issues, & Schedule Follow-ups
- Order History - Visibility On All Purchases
- Returns - Turn A Bad Situation Into An Opportunity

## All About Supply chain

Supply Chain is the channel for moving materials and goods and services from your supplier to your customer.
Logistics is the process of filling a customer's order.


# Group Supplier
## Supplier [/supplier/{supplier_id}]

+ Parameters
    + supplier_id (number) - ID of the Question in the form of an integer

### List All Supplier [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

### Create a New Question [POST]

You may create your own question using this action. It takes a JSON
object containing a question and a collection of answers in the
form of choices.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }

# Group Warehouse

## Goods-In Note Correction [/warehouse/good_in_correct]
This resource allows you to correct the quantity of stock received on a batch.
### POST [POST]
+ Response 200 (application/json)

## Goods-In Note [/warehouse/good_in]
A Goods-In Note is used to represent stock entering your stock control system for the first time. It is most often used when stock is delivered from a supplier to one of your Warehouses.
### GET [GET]
+ Response 200 (application/json)
### POST [POST]
+ Response 200 (application/json)
### DELETE [DELETE]
+ Response 200 (application/json)

## Goods-Out Note [/warehouse/good_out]
Goods-Out Notes are used to represent stock permanently leaving your stock control system. The most common use of a Goods-Out Note is to facilitate the fulfilment of a Sales Order.
### GET [GET]
+ Response 200 (application/json)
### POST [POST]
+ Response 200 (application/json)
### PUT [PUT]
+ Response 200 (application/json)
### DELETE [DELETE]
+ Response 200 (application/json)

## Goods-Out Note Event [/warehouse/good_out_event]
A goods-out note event represents an event in the lifecycle of a goods-out note such as picked, packed and shipped.
### POST [POST]
+ Response 200 (application/json)

## View All Warehouse [/warehouse/{limit}&{offset}&{sort}&{search}]

### View Warehouse [GET]
+ Parameters
    + limit (int, optional) - The maximum
        + Default: 10
    + offset (int, required)
    + sort (enum[string], optional)
        + Members
            + `name`
            + `-name`
    + search (unicodestring, optional)

+ Response 200 (application/json)
### Create [POST]
The body of this request should be a JSON object containing the following parameters:

| Name | Type | Description |
|------|------|-------------|
| `name` | **unicodestring**, *required* |  |
| `street1` | unicodestring |  |
| `street2` | unicodestring |  |
| `city` | unicodestring |  |
| `state` | unicodestring |  |
| `zip` | unicodestring |  |
| `country` | unicodestring |  |
| `email` | unicodestring |  |
| `phone` | unicodestring |  |
| `cart_id` | unicodestring |  |

+ Response 200 (application/json)

## Default Warehouse [/warehouse/{warehouse_id}/make_default/]
+Parameters
    + warehouse_id (string)

### Set Default [POST]
+ Response 200 (application/json)

# Group Products

# Group Money

## Currency

# Group User

## Concurrent User